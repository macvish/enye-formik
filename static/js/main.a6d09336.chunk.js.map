{"version":3,"sources":["reducers/fnameReducer.js","reducers/lnameReducer.js","reducers/ageReducer.js","reducers/hobbyReducer.js","reducers/dateReducer.js","reducers/rootReducer.js","reducers/Actions.js","App.js","serviceWorker.js","index.js"],"names":["INIT_STATE","name","age","hobby","year","date","rootReducer","combineReducers","fname","state","action","type","Object","assign","lname","birthday","dateYear","dateString","Header","Footer","Content","currentYear","Date","getFullYear","App","currentyear","_handleSubmit","bind","_disabledYear","_handleDate","current","moment","endOf","datestring","this","props","addDate","addAge","e","preventDefault","form","validateFieldsAndScroll","err","values","console","log","getFieldDecorator","className","onSubmit","Item","rules","required","message","placeholder","onChange","addFName","target","value","style","width","addLName","format","disabledDate","color","disabled","addHobby","htmlType","Component","WrappedForm","create","mapDispatchToProps","connect","Boolean","window","location","hostname","match","store","createStore","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a6d09336.chunk.js","sourcesContent":["import {ADD_FNAME} from './Actions'\r\n\r\nconst INIT_STATE = {\r\n    name: ''\r\n}\r\n\r\nexport const fnameReducer = (state = INIT_STATE, action) => {\r\n    switch (action.type) {\r\n        case ADD_FNAME:\r\n            return Object.assign({}, state, { name: action.fname})\r\n        default:\r\n            return state\r\n    }\r\n}","import {ADD_LNAME} from './Actions'\r\n\r\nconst INIT_STATE = {\r\n    name: '',\r\n}\r\n\r\nexport const lnameReducer = (state = INIT_STATE, action) => {\r\n    switch (action.type) {\r\n        case ADD_LNAME:\r\n            return Object.assign({}, state, { name: action.lname})  \r\n        default:\r\n            return state\r\n    }\r\n}","import {ADD_AGE} from './Actions'\r\n\r\nconst INIT_STATE = {\r\n    age: '',\r\n}\r\n\r\nexport const ageReducer = (state = INIT_STATE, action) => {\r\n    switch (action.type) {\r\n        case ADD_AGE:\r\n            return Object.assign({}, state, { age: action.age})\r\n        default:\r\n            return state\r\n    }\r\n}","import {ADD_HOBBY} from './Actions'\r\n\r\nconst INIT_STATE = {\r\n    hobby: '',\r\n}\r\n\r\nexport const hobbyReducer = (state = INIT_STATE, action) => {\r\n    switch (action.type) {\r\n        case ADD_HOBBY:\r\n            return Object.assign({}, state, { hobby: action.hobby}) \r\n        default:\r\n            return state\r\n    }\r\n}","import {ADD_DATE} from './Actions'\r\n\r\nconst INIT_STATE = {\r\n    year: null,\r\n    date: null\r\n}\r\n\r\nexport const dateReducer = (state = INIT_STATE, action) => {\r\n    switch (action.type) {\r\n        case ADD_DATE:\r\n            return Object.assign({}, state, {year: action.dateYear, date: action.dateString})    \r\n        default:\r\n            return state\r\n    }\r\n}","import { combineReducers } from 'redux'\r\n\r\nimport { fnameReducer } from './fnameReducer'\r\nimport { lnameReducer } from './lnameReducer'\r\nimport { ageReducer } from './ageReducer'\r\nimport { hobbyReducer } from './hobbyReducer';\r\nimport { dateReducer } from './dateReducer'\r\n\r\nexport const rootReducer = combineReducers({\r\n    fname: fnameReducer,\r\n    lname: lnameReducer,\r\n    birthday: dateReducer,\r\n    age: ageReducer,\r\n    hobby: hobbyReducer\r\n})","export const ADD_DATE = 'ADD_DATE'\r\nexport const addDate = (dateYear, dateString) => {\r\n    return {\r\n        type: ADD_DATE,\r\n        dateYear,\r\n        dateString\r\n    }\r\n}\r\n\r\nexport const ADD_AGE = 'ADD_AGE'\r\nexport const addAge = (age) => {\r\n    return {\r\n        type: ADD_AGE,\r\n        age\r\n    }\r\n}\r\n\r\nexport const ADD_FNAME = 'ADD_FNAME'\r\nexport const addFName = (fname) => {\r\n    return {\r\n        type: ADD_FNAME,\r\n        fname\r\n    }\r\n}\r\n\r\nexport const ADD_LNAME = 'ADD_LNAME'\r\nexport const addLName = (lname) => {\r\n    return {\r\n        type: ADD_LNAME,\r\n        lname\r\n    }\r\n}\r\n\r\nexport const ADD_HOBBY = 'ADD_HOBBY'\r\nexport const addHobby = (hobby) => {\r\n    return {\r\n        type: ADD_HOBBY,\r\n        hobby\r\n    }\r\n}","import React, { Component } from 'react'\nimport moment from 'moment'\nimport { connect } from 'react-redux'\nimport { Button, Layout, Input, DatePicker, InputNumber, Form } from 'antd'\n\nimport { addAge, addDate, addFName, addLName, addHobby } from './reducers/Actions'\nimport './App.css'\n\nconst { Header, Footer, Content } = Layout\nlet currentYear = new Date().getFullYear()\n\nclass App extends Component{\n  constructor(){\n    super()\n    this.state = {\n      currentyear: currentYear,\n    }\n\n    this._handleSubmit = this._handleSubmit.bind(this)\n    this._disabledYear =this._disabledYear.bind(this)\n    this._handleDate = this._handleDate.bind(this)\n  }\n\n  _disabledYear(current) {\n    // Can not select days before today and today\n    return current && current >= moment().endOf('day');\n  }\n\n  _handleDate(date, datestring){\n    let year = date.year()\n    this.props.addDate(year, datestring)\n    let age = this.state.currentyear - year\n    this.props.addAge(`Age: ${age}`)\n  }\n\n  _handleSubmit(e){\n    e.preventDefault()\n    this.props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        console.log('Received values of form: ', values);\n      }\n    })\n  }\n  render() {\n    const { getFieldDecorator } = this.props.form\n    return (\n      <div className=\"App\">\n        <Layout>\n          <Header className='header'>Enya Form</Header>\n          <Content>\n            <div className='container'>\n              <Form onSubmit={this._handleSubmit}>\n                <Form.Item>\n                {getFieldDecorator('first name', {\n                  rules: [{ required: true, message: 'Please input your first name!' }],\n                })(\n                  <Input  placeholder='First Name' \n                  onChange={(e) => this.props.addFName(e.target.value)}\n                  style={{width: '23%'}}/>)}\n                </Form.Item>\n                <Form.Item>\n                {getFieldDecorator('last name', {\n                  rules: [{ required: true, message: 'Please input your last name!' }],\n                })(\n                  <Input placeholder='Last Name' \n                  onChange={(e) => this.props.addLName(e.target.value)}\n                  style={{width: '23%'}}/>)}\n                </Form.Item>\n                <Form.Item>\n                {getFieldDecorator('date', {\n                  rules: [{ required: true, message: 'Please enter your date of birth!' }],\n                })(\n                  <DatePicker \n                    placeholder='Birthday' \n                    format='DD/MM'\n                    disabledDate={this._disabledYear}\n                    onChange={this._handleDate} \n                    style={{width: '15%'}} \n                  />)}\n                </Form.Item>\n                <Form.Item>\n                  <InputNumber \n                    placeholder='Age'\n                    value={this.props.age}                \n                    style={{ color: '#000', width: 70}} disabled/>\n                </Form.Item>  \n                <Form.Item>\n                {getFieldDecorator('hobby', {\n                  rules: [{ required: true, message: 'Please input your hobby!' }],\n                })(\n                  <Input placeholder='Hobby' \n                  onChange={(e) => this.props.addHobby(e.target.value)}\n                  style={{width: '23%'}}/>)}\n                </Form.Item>\n                <div></div>\n                <Form.Item>\n                  <Button type=\"primary\" htmlType=\"submit\" style={{width: '23%'}}>Sumbit</Button>\n                </Form.Item>\n              </Form>\n            </div>\n          </Content>\n          <Footer>Footer</Footer>\n        </Layout>\n      </div>\n    )\n  }\n}\n\nconst WrappedForm = Form.create({ name: 'user_form' })(App)\n\nconst mapStateToProps = state => {\n  return{\n    fname: state.fname.name,\n    lname: state.lname.name,\n    date: state.birthday.date,\n    age: state.age.age,\n    hobby: state.hobby.hobby,\n    year: state.birthday.year\n  }\n}\n\nconst mapDispatchToProps = { addAge, addDate, addFName, addLName, addHobby }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WrappedForm)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore } from 'redux'\nimport {Provider} from 'react-redux'\nimport { rootReducer } from './reducers/rootReducer'\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = createStore(rootReducer)\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}